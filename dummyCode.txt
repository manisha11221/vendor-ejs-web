<%- include('../../layouts/header.ejs') %> <%-
include('../../layouts/sidebar.ejs') %>
  
<div class="container-scroller">
  <div class="container-fluid page-body-wrapper">
    <div class="main-panel">
      <div class="content-wrapperrr">
        <div class="page-header">
          <h3 class="page-title">Technology Dashboard</h3>
        </div>

        <!-- Add button to toggle technology form -->
        <div class="mb-3">
          <button id="toggleTechnologyForm" class="btn btn-primary">
            Add Technology
          </button>
        </div>

        <!-- Technology form initially hidden -->
        <div id="technologyFormContainer" style="display: none">
          <div class="card col-md-6">
            <div class="card-body">
              <h4 class="card-title">Add Technology</h4>
              <form id="addTechnologyForm">
                <div class="form-group">
                  <label for="technologyName">Technology Name</label>
                  <input
                    type="text"
                    class="form-control"
                    id="technologyName"
                    placeholder="Enter technology name"
                    required
                  />
                </div>
                <button type="submit" class="btn btn-primary">
                  Create Technology
                </button>
              </form>
            </div>
          </div>
        </div>

        <div class="card mt-3">
          <div class="card-body">
            <h4 class="card-title">All Technologies</h4>
            <div class="table-responsive">
              <table class="table table-striped" id="technologyTable">
                <thead>
                  <tr>
                    <th>ID</th>
                    <th>Technology Name</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody id="technologyTableBody">
                  <!-- Table rows will be dynamically populated here -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal for updating technology -->
<div class="modal mt-4" id="updateTechnologyModal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Update Technology</h5>
        <button
          type="button"
          class="close"
          data-dismiss="modal"
          aria-label="Close"
        >
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="updateTechnologyForm">
          <div class="form-group">
            <label for="updatedTechnologyName">Technology Name</label>
            <input
              type="text"
              class="form-control"
              id="updatedTechnologyName"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary">
            Update Technology
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<%- include('../../layouts/footer.ejs') %>

<script>
  // Function to get all technologies and populate the table
  document.addEventListener("DOMContentLoaded", function () {
    getAllTechnologies();
  });

  function getAllTechnologies() {
    fetch("http://localhost:3000/technology/get-technology")
      .then((response) => response.json())
      .then((data) => {
        displayTechnologies(data.technology);
      })
      .catch((error) => {
        console.error("Error fetching data:", error);
      });
  }

  // Function to display technologies in the table
  function displayTechnologies(technologies) {
    var tableBody = document.getElementById("technologyTableBody");
    tableBody.innerHTML = "";

    technologies.forEach((technology) => {
      var newRow = tableBody.insertRow(tableBody.rows.length);

      var cell1 = newRow.insertCell(0);
      var cell2 = newRow.insertCell(1);
      var cell3 = newRow.insertCell(2);

      cell1.innerHTML = technology._id;
      cell2.innerHTML = technology.name;
      cell3.innerHTML =
        '<button class="btn btn-warning" onclick="updateTechnology(this)">Update</button>' +
        '<button class="btn btn-danger ml-2" onclick="deleteTechnology(this)">Delete</button>';
    });
  }

  // Toggle visibility of technology form
  document
    .getElementById("toggleTechnologyForm")
    .addEventListener("click", function () {
      var formContainer = document.getElementById("technologyFormContainer");
      formContainer.style.display =
        formContainer.style.display === "none" ? "block" : "none";
    });

  // Handle technology form submission
  document
    .getElementById("addTechnologyForm")
    .addEventListener("submit", function (event) {
      event.preventDefault();

      var technologyName = document.getElementById("technologyName").value;

      // Add the new technology to the server
      addTechnologyToServer(technologyName);
    });

  // Function to add technology to the server
  function addTechnologyToServer(techName) {
    fetch("http://localhost:3000/technology/add-technology", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ name: techName }),
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          // If the technology is added successfully, update the table
          addTechnologyToTable(data.technology._id, techName); // Assuming the server sends back the ID
        } else {
          console.error("Failed to add technology:", data.message);
        }
      })
      .catch((error) => {
        console.error("Error adding technology:", error);
      })
      .finally(() => {
        // Clear the form field
        document.getElementById("technologyName").value = "";

        // Hide the form after submission
        document.getElementById("technologyFormContainer").style.display =
          "none";
      });
  }

  // Function to add technology to the table
  function addTechnologyToTable(techId, techName) {
    console.log("resIDDDDDD:::", techId);
    var tableBody = document.getElementById("technologyTableBody");
    var newRow = tableBody.insertRow(tableBody.rows.length);

    var cell1 = newRow.insertCell(0);
    var cell2 = newRow.insertCell(1);
    var cell3 = newRow.insertCell(2);

    cell1.innerHTML = techId; // Assuming the ID is provided by the server
    cell2.innerHTML = techName;
    cell3.innerHTML =
      '<button class="btn btn-warning" onclick="updateTechnology(this)">Update</button>' +
      '<button class="btn btn-danger ml-2" onclick="deleteTechnology(this)">Delete</button>';
  }

  // Function to update technology
  function updateTechnology(button) {
    var row = button.parentNode.parentNode;
    var techId = row.cells[0].innerHTML;
    console.log("techIdtechIdtechIdtechId", techId);
    var techName = row.cells[1].innerHTML;

    // Set the current technology name in the modal input field
    document.getElementById("updatedTechnologyName").value = techName;

    // Show the updateTechnologyModal
    $("#updateTechnologyModal").modal("show");

    // Handle form submission
    document
      .getElementById("updateTechnologyForm")
      .addEventListener("submit", function (event) {
        event.preventDefault();

        var newTechName = document.getElementById(
          "updatedTechnologyName"
        ).value;

        // Send AJAX request to update technology in the server
        fetch(`http://localhost:3000/technology/edit-technology${techId}`, {
          method: "POST", // Use POST instead of PUT if your backend requires it
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ name: newTechName }),
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("Update response:", data);
            if (data.success) {
              // Update the table with the updated technology
              row.cells[1].innerHTML = newTechName;
            } else {
              console.error("Failed to update technology:", data.message);
            }
          })
          .catch((error) => {
            console.error("Error updating technology:", error);
          })
          .finally(() => {
            // Hide the modal after submission
            $("#updateTechnologyModal").modal("hide");
          });
      });
  }

  // Function to delete technology
  function deleteTechnology(button) {
    var row = button.parentNode.parentNode;
    var techId = row.cells[0].innerHTML;

    // Send AJAX request to delete technology in the server
    fetch(`http://localhost:3000/technology/delete-technology/${techId}`, {
      method: "DELETE",
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          // Remove the row from the table
          row.parentNode.removeChild(row);
        } else {
          console.error("Failed to delete technology:", data.message);
        }
      })
      .catch((error) => {
        console.error("Error deleting technology:", error);
      });
  }

  const tokens = localStorage.getItem("adminToken");

  if (!tokens) {
    // Redirect to the login page if the token is not present
    window.location.href = "/login";
  }
  
</script>















///after added datable

<%- include('../../layouts/header.ejs') %> <%-
include('../../layouts/sidebar.ejs') %>

<div class="container-scroller">
  <div class="container-fluid page-body-wrapper">
    <div class="main-panel">
      <div class="content-wrapperrr">
        <div class="page-header">
          <h3 class="page-title">Technology Dashboard</h3>
        </div>

        <!-- Add button to toggle technology form -->
        <div class="mb-3">
          <button id="toggleTechnologyForm" class="btn btn-primary">
            Add Technology
          </button>
        </div>

        <!-- Technology form initially hidden -->
        <div id="technologyFormContainer" style="display: none">
          <div class="card col-md-6">
            <div class="card-body">
              <h4 class="card-title">Add Technology</h4>
              <form id="addTechnologyForm">
                <div class="form-group">
                  <label for="technologyName">Technology Name</label>
                  <input
                    type="text"
                    class="form-control"
                    id="technologyName"
                    placeholder="Enter technology name"
                    required
                  />
                </div>
                <button type="submit" class="btn btn-primary">
                  Create Technology
                </button>
              </form>
            </div>
          </div>
        </div>

        <div class="card mt-3">
          <div class="card-body">
            <h4 class="card-title">All Technologies</h4>
            <div class="table-responsive">
              <table
                id="technologyTable"
                class="table table-striped table-bordered"
                style="width: 100%"
              >
                <thead>
                  <tr>
                    <th>ID</th>
                    <th>Technology Name</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody id="technologyTableBody">
                  <!-- Table rows will be dynamically populated here -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    
    <%- include('../../layouts/footer.ejs') %>
  
    <script>
      // Initialize DataTable
      var dataTable = $("#technologyTable").DataTable({
        responsive: true,
      });

      // Redraw the table to reflect any changes
      dataTable.draw();

      // Function to get all technologies and populate the table
      document.addEventListener("DOMContentLoaded", function () {
        getAllTechnologies();
      });

      function getAllTechnologies() {
        fetch("http://localhost:3000/technology/get-technology")
          .then((response) => response.json())
          .then((data) => {
            displayTechnologies(data.technology);
          })
          .catch((error) => {
            console.error("Error fetching data:", error);
          });
      }

      // Function to display technologies in the table
      function displayTechnologies(technologies) {
        var tableBody = document.getElementById("technologyTableBody");
        tableBody.innerHTML = "";

        technologies.forEach((technology) => {
          var newRow = tableBody.insertRow(tableBody.rows.length);

          var cell1 = newRow.insertCell(0);
          var cell2 = newRow.insertCell(1);
          var cell3 = newRow.insertCell(2);

          cell1.innerHTML = technology._id;
          cell2.innerHTML = technology.name;
          cell3.innerHTML =
            '<button class="btn btn-warning" onclick="updateTechnology(this)">Update</button>' +
            '<button class="btn btn-danger ml-2" onclick="deleteTechnology(this)">Delete</button>';
        });
      }

      // Toggle visibility of technology form
      document
        .getElementById("toggleTechnologyForm")
        .addEventListener("click", function () {
          var formContainer = document.getElementById(
            "technologyFormContainer"
          );
          formContainer.style.display =
            formContainer.style.display === "none" ? "block" : "none";
        });

      // Handle technology form submission
      document
        .getElementById("addTechnologyForm")
        .addEventListener("submit", function (event) {
          event.preventDefault();

          var technologyName = document.getElementById("technologyName").value;

          // Add the new technology to the server
          addTechnologyToServer(technologyName);
        });

      // Function to add technology to the server
      function addTechnologyToServer(techName) {
        fetch("http://localhost:3000/technology/add-technology", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ name: techName }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              // If the technology is added successfully, update the table
              addTechnologyToTable(data.technology._id, techName); // Assuming the server sends back the ID
            } else {
              console.error("Failed to add technology:", data.message);
            }
          })
          .catch((error) => {
            console.error("Error adding technology:", error);
          })
          .finally(() => {
            // Clear the form field
            document.getElementById("technologyName").value = "";

            // Hide the form after submission
            document.getElementById("technologyFormContainer").style.display =
              "none";
          });
      }

      // Function to add technology to the table
      function addTechnologyToTable(techId, techName) {
        console.log("resIDDDDDD:::", techId);
        var tableBody = document.getElementById("technologyTableBody");
        var newRow = tableBody.insertRow(tableBody.rows.length);

        var cell1 = newRow.insertCell(0);
        var cell2 = newRow.insertCell(1);
        var cell3 = newRow.insertCell(2);

        cell1.innerHTML = techId; // Assuming the ID is provided by the server
        cell2.innerHTML = techName;
        cell3.innerHTML =
          '<button class="btn btn-warning" onclick="updateTechnology(this)">Update</button>' +
          '<button class="btn btn-danger ml-2" onclick="deleteTechnology(this)">Delete</button>';
      }

      // Function to update technology
      function updateTechnology(button) {
        var row = button.parentNode.parentNode;
        var techId = row.cells[0].innerHTML;
        console.log("techIdtechIdtechIdtechId", techId);
        var techName = row.cells[1].innerHTML;

        // Set the current technology name in the modal input field
        document.getElementById("updatedTechnologyName").value = techName;

        // Show the updateTechnologyModal
        $("#updateTechnologyModal").modal("show");

        // Handle form submission
        document
          .getElementById("updateTechnologyForm")
          .addEventListener("submit", function (event) {
            event.preventDefault();

            var newTechName = document.getElementById(
              "updatedTechnologyName"
            ).value;

            // Send AJAX request to update technology in the server
            fetch(`http://localhost:3000/technology/edit-technology${techId}`, {
              method: "POST", // Use POST instead of PUT if your backend requires it
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ name: newTechName }),
            })
              .then((response) => response.json())
              .then((data) => {
                console.log("Update response:", data);
                if (data.success) {
                  // Update the table with the updated technology
                  row.cells[1].innerHTML = newTechName;
                } else {
                  console.error("Failed to update technology:", data.message);
                }
              })
              .catch((error) => {
                console.error("Error updating technology:", error);
              })
              .finally(() => {
                // Hide the modal after submission
                $("#updateTechnologyModal").modal("hide");
              });
          });
      }

      // Function to delete technology
      function deleteTechnology(button) {
        var row = button.parentNode.parentNode;
        var techId = row.cells[0].innerHTML;

        // Send AJAX request to delete technology in the server
        fetch(`http://localhost:3000/technology/delete-technology/${techId}`, {
          method: "DELETE",
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              // Remove the row from the table
              row.parentNode.removeChild(row);
            } else {
              console.error("Failed to delete technology:", data.message);
            }
          })
          .catch((error) => {
            console.error("Error deleting technology:", error);
          });
      }

      const tokens = localStorage.getItem("adminToken");

      if (!tokens) {
        // Redirect to the login page if the token is not present
        window.location.href = "/login";
      }
      </script>
  </div>
</div>














































<div class="container-scroller">
  <!-- partial:../../partials/_navbar.html -->
  <nav
    class="navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row"
  >
    <div
      class="text-center navbar-brand-wrapper d-flex align-items-center justify-content-center"
    >
      <a class="navbar-brand brand-logo" href="/dashboard"
        ><img src="../../assets/images/logo.svg" alt="logo"
      /></a>
      <a class="navbar-brand brand-logo-mini" href="/dashboard"
        ><img src="../../assets/images/logo-mini.svg" alt="logo"
      /></a>
    </div>
    <div class="navbar-menu-wrapper d-flex align-items-stretch">
      <button
        class="navbar-toggler navbar-toggler align-self-center"
        type="button"
        data-toggle="minimize"
      >
        <span class="mdi mdi-menu"></span>
      </button>
      <div class="search-field d-none d-md-block">
        <form class="d-flex align-items-center h-100" action="#">
          <div class="input-group">
            <div class="input-group-prepend bg-transparent">
              <i class="input-group-text border-0 mdi mdi-magnify"></i>
            </div>
            <input
              type="text"
              class="form-control bg-transparent border-0"
              placeholder="Search projects"
            />
          </div>
        </form>
      </div>
      <ul class="navbar-nav navbar-nav-right">
        <li class="nav-item nav-profile dropdown">
          <a
            class="nav-link dropdown-toggle"
            id="profileDropdown"
            href="#"
            data-bs-toggle="dropdown"
            aria-expanded="false"
          >
            <div class="nav-profile-img">
              <img src="../../assets/images/faces/face1.jpg" alt="image" />
              <span class="availability-status online"></span>
            </div>
            <div class="nav-profile-text">
              <p class="mb-1 text-black">David Greymaax</p>
            </div>
          </a>
          <div
            class="dropdown-menu navbar-dropdown"
            aria-labelledby="profileDropdown"
          >
            <a class="dropdown-item" href="/edit-profile">
              <i class="mdi mdi-account-edit me-2 text-primary"></i> Edit
              Profile
            </a>
            <!-- <a class="dropdown-item" href="#">
                    <i class="mdi mdi-cached me-2 text-success"></i> Activity Log </a> -->
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#" id="logoutButton">
              <i class="mdi mdi-logout me-2 text-primary"></i> Signout
            </a>
          </div>
        </li>
        <li class="nav-item d-none d-lg-block full-screen-link">
          <a class="nav-link">
            <i class="mdi mdi-fullscreen" id="fullscreen-button"></i>
          </a>
        </li>
        <!-- <li class="nav-item dropdown">
                <a class="nav-link count-indicator dropdown-toggle" id="messageDropdown" href="#" data-bs-toggle="dropdown" aria-expanded="false">
                  <i class="mdi mdi-email-outline"></i>
                  <span class="count-symbol bg-warning"></span>
                </a>
                <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list" aria-labelledby="messageDropdown">
                  <h6 class="p-3 mb-0">Messages</h6>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <img src="../../assets/images/faces/face4.jpg" alt="image" class="profile-pic">
                    </div>
                    <div class="preview-item-content d-flex align-items-start flex-column justify-content-center">
                      <h6 class="preview-subject ellipsis mb-1 font-weight-normal">Mark send you a message</h6>
                      <p class="text-gray mb-0"> 1 Minutes ago </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <img src="../../assets/images/faces/face2.jpg" alt="image" class="profile-pic">
                    </div>
                    <div class="preview-item-content d-flex align-items-start flex-column justify-content-center">
                      <h6 class="preview-subject ellipsis mb-1 font-weight-normal">Cregh send you a message</h6>
                      <p class="text-gray mb-0"> 15 Minutes ago </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <img src="../../assets/images/faces/face3.jpg" alt="image" class="profile-pic">
                    </div>
                    <div class="preview-item-content d-flex align-items-start flex-column justify-content-center">
                      <h6 class="preview-subject ellipsis mb-1 font-weight-normal">Profile picture updated</h6>
                      <p class="text-gray mb-0"> 18 Minutes ago </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <h6 class="p-3 mb-0 text-center">4 new messages</h6>
                </div>
              </li> -->
        <!-- <li class="nav-item dropdown">
                <a class="nav-link count-indicator dropdown-toggle" id="notificationDropdown" href="#" data-bs-toggle="dropdown">
                  <i class="mdi mdi-bell-outline"></i>
                  <span class="count-symbol bg-danger"></span>
                </a>
                <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list" aria-labelledby="notificationDropdown">
                  <h6 class="p-3 mb-0">Notifications</h6>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <div class="preview-icon bg-success">
                        <i class="mdi mdi-calendar"></i>
                      </div>
                    </div>
                    <div class="preview-item-content d-flex align-items-start flex-column justify-content-center">
                      <h6 class="preview-subject font-weight-normal mb-1">Event today</h6>
                      <p class="text-gray ellipsis mb-0"> Just a reminder that you have an event today </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <div class="preview-icon bg-warning">
                        <i class="mdi mdi-settings"></i>
                      </div>
                    </div>
                    <div class="preview-item-content d-flex align-items-start flex-column justify-content-center">
                      <h6 class="preview-subject font-weight-normal mb-1">Settings</h6>
                      <p class="text-gray ellipsis mb-0"> Update dashboard </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item preview-item">
                    <div class="preview-thumbnail">
                      <div class="preview-icon bg-info">
                        <i class="mdi mdi-link-variant"></i>
                      </div>
                    </div>
                    <div class="preview-item-content d-flex align-items-start flex-column justify-content-center">
                      <h6 class="preview-subject font-weight-normal mb-1">Launch Admin</h6>
                      <p class="text-gray ellipsis mb-0"> New admin wow! </p>
                    </div>
                  </a>
                  <div class="dropdown-divider"></div>
                  <h6 class="p-3 mb-0 text-center">See all notifications</h6>
                </div>
              </li> -->
        <!-- <li class="nav-item nav-logout d-none d-lg-block">
                <a class="nav-link" href="#">
                  <i class="mdi mdi-power"></i>
                </a>
              </li> -->
        <!-- <li class="nav-item nav-settings d-none d-lg-block">
                <a class="nav-link" href="#">
                  <i class="mdi mdi-format-line-spacing"></i>
                </a>
              </li> -->
      </ul>
      <button
        class="navbar-toggler navbar-toggler-right d-lg-none align-self-center"
        type="button"
        data-toggle="offcanvas"
      >
        <span class="mdi mdi-menu"></span>
      </button>
    </div>
  </nav>
  <!-- partial -->
  <div class="container-fluid page-body-wrapper">
    <!-- partial:../../partials/_sidebar.html -->
    <nav class="sidebar sidebar-offcanvas" id="sidebar">
      <ul class="nav">
        <li class="nav-item nav-profile">
          <a href="#" class="nav-link">
            <div class="nav-profile-image">
              <img src="../../assets/images/faces/face1.jpg" alt="profile" />
              <span class="login-status online"></span>
              <!--change to offline or busy as needed-->
            </div>
            <div class="nav-profile-text d-flex flex-column">
              <span class="font-weight-bold mb-2">David Grey. H</span>
              <span class="text-secondary text-small">Project Manager</span>
            </div>
            <i
              class="mdi mdi-bookmark-check text-success nav-profile-badge"
            ></i>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/vendor-dashboard">
            <span class="menu-title">Dashboard</span>
            <i class="mdi mdi-home menu-icon"></i>
          </a>
        </li>
        <li class="nav-item"></li>

        <li class="nav-item">
          <a class="nav-link" href="/vendor-technology">
            <span class="menu-title">Technology</span>
            <i class="mdi mdi-home menu-icon"></i>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/vendor-developer">
            <span class="menu-title">Developer</span>
            <i class="mdi mdi-home menu-icon"></i>
          </a>
        </li>
      </ul>
    </nav>
    <!-- partial -->
    <div class="main-panel">
      <div class="content-wrapper">
        <div class="page-header">
          <h3 class="page-title"></h3>
        </div>
      </div>
      <!-- content-wrapper ends -->

      <script>

const token = localStorage.getItem("vendorToken");

        document.addEventListener("DOMContentLoaded", function () {
          const logoutButton = document.getElementById("logoutButton");

          logoutButton.addEventListener("click", async function (event) {
            event.preventDefault(); 

            try {
              console.log("Ready to logout");
              const response = await fetch("http://localhost:3000/vendor/logout-vendor", {
                method: "POST",
                headers: {
                  Authorization: `Bearer ${token}`, // Make sure 'token' is defined
                  "Content-Type": "application/json",
                },
              });

              if (response.ok) {
                const responseData = await response.json();
                window.location.href = "/login";
                localStorage.removeItem("vendorToken");
              } else {
                // Handle error responses
                const errorData = await response.json();
                console.error("Logout failed:", errorData);
              }
            } catch (error) {
              console.error("Error during logout:", error);
            }
          });
        });


        

      </script>
    </div>
  </div>
</div>
