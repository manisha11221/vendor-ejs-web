<%- include('../layouts/header.ejs') %>

<div class="container-scroller">
  <div class="container-fluid page-body-wrapper full-page-wrapper">
    <div class="content-wrapper d-flex align-items-center auth">
      <div class="row flex-grow">
        <div
          class="col-lg-4 mx-auto d-flex align-items-center justify-content-between"
        >
          <div class="auth-form-light text-left p-5" id="loginnn">
            <div class="brand-logo">
              <img src="../../public/assets/images/takedev.svg" />
            </div>
            <h6 class="font-weight-light">Sign Up to continue.</h6>
            <div id="errorMessage" class="alert alert-danger mt-3 d-none"></div>
            <form id="passwordForm" class="pt-3">
              <div class="form-group">
                <input
                  type="password"
                  class="form-control form-control-lg"
                  id="InputPassword1"
                  placeholder="Password"
                  name="password"
                  required
                />
              </div>
              <div class="form-group">
                <input
                  type="password"
                  class="form-control form-control-lg"
                  id="InputConfirmPassword"
                  placeholder="Confirm Password"
                  name="confirmPassword"
                  required
                />
              </div>
              <!-- Add a hidden input field for user ID -->
              <input type="hidden" id="id" />

              <div
                class="mt-3 d-flex justify-content-between align-items-center"
              >
                <button
                  type="button"
                  class="btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn"
                  onclick="setPassword()"
                >
                  SUBMIT
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!-- content-wrapper ends -->
  </div>
  <!-- page-body-wrapper ends -->
</div>

<script>
  const currentURL = window.location.href;
  const { pathname } = new URL(currentURL);
  const pathSegments = pathname.split("/");
  const userId = pathSegments[pathSegments.length - 1];

  console.log("ID:", userId);

  function validatePassword(password) {
    // Password must contain at least 7 characters, including at least one uppercase letter and one digit
    return /^(?=.*[A-Z])(?=.*\d).{7,}$/.test(password);
  }

  function displayErrorMessage(message) {
    var errorMessageElement = document.getElementById("errorMessage");

    // If the element doesn't exist, create it
    if (!errorMessageElement) {
      errorMessageElement = document.createElement("div");
      errorMessageElement.id = "errorMessage";
      errorMessageElement.className = "alert alert-danger mt-3";
      document.getElementById("passwordForm").prepend(errorMessageElement);
    }

    errorMessageElement.textContent = message;
    errorMessageElement.classList.remove("d-none");
  }

  function hideErrorMessage() {
    var errorMessageElement = document.getElementById("errorMessage");
    if (errorMessageElement) {
      errorMessageElement.classList.add("d-none");
    }
  }

  async function setPassword() {
    const password = document.getElementById("InputPassword1").value;
    const confirmPassword = document.getElementById("InputConfirmPassword").value;

    // Validate password
    if (!validatePassword(password)) {
      const errorMessage = "Password must be at least 7 characters with at least one uppercase letter and one digit.";
      console.error(errorMessage);

      // Display an error message above the form
      displayErrorMessage(errorMessage);
      return;
    }

    // Validate password match
    if (password !== confirmPassword) {
      const errorMessage = "Password and confirm password do not match.";
      console.error(errorMessage);

      // Display an error message above the form
      displayErrorMessage(errorMessage);
      return;
    }

    // Clear any existing error message
    hideErrorMessage();

    try {
      console.log("userId------------", userId);

      const response = await fetch(`http://localhost:3000/vendor/set-Password/${userId}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ password, confirmPassword }),
      });

      const data = await response.json();

      if (response.ok) {
        window.location.href = "/login";
        console.log(data.message);
      } else {
        console.error(data.message);
      }
    } catch (error) {
      console.error("Error during setPassword:", error);
    }
  }
</script>