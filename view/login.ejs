<%- include('layouts/header.ejs') %>
<div class="container-scroller">
  <div class="container-fluid page-body-wrapper full-page-wrapper">
    <div class="content-wrapper d-flex align-items-center auth">
      <div class="row flex-grow">
        <div class="col-lg-4 mx-auto d-flex align-items-center justify-content-between">
          <div class="auth-form-light text-left p-5"  id="loginnn">
            <div class="brand-logo">
              <img src="../../assets/images/logo.svg" />
            </div>
            <h6 class="font-weight-light">Sign in to continue.</h6>
            
            <form id="loginForm" class="pt-3">
              <div class="form-group">
                <input
                  type="email"
                  class="form-control form-control-lg"
                  id="InputEmail1"
                  placeholder="Username"
                  name="email"
                />
              </div>
              <div class="form-group">
                <input
                  type="password"
                  class="form-control form-control-lg"
                  id="InputPassword1"
                  placeholder="Password"
                  name="password"
                />
              </div>
              <div class="form-group">
                <label for="role">Role:</label>
                <select id="role" name="role" class="form-control" required>
                  <option value="admin">Admin</option>
                  <option value="vendor">Vendor</option>
                </select>
              </div>
              <div class="mt-3">
                <button
                  type="button"
                  class="btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn"
                  onclick="signIn()"
                >
                  SIGN IN
                </button>
              </div>
              <div
                class="my-2 d-flex justify-content-between align-items-center"
              >
                <div class="form-check">
                  <label class="form-check-label text-muted">
                    <input type="checkbox" class="form-check-input" /> Keep me
                    signed in
                  </label>
                </div>
                <a href="#" class="auth-link text-black">Forgot password?</a>
              </div>

              <div class="text-center mt-4 font-weight-light">
                Don't have an account?
                <a href="/vendor-register" class="text-primary">Create</a>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!-- content-wrapper ends -->
  </div>
  <!-- page-body-wrapper ends -->
</div>

<script>
  function signIn() {
    var formData = {
      email: document.getElementById("InputEmail1").value,
      password: document.getElementById("InputPassword1").value,
      role: document.getElementById("role").value,
    };

    // Add validation for empty fields
    if (!formData.email || !formData.password || !formData.role) {
      displayErrorMessage("Please fill in all fields");
      return;
    }

     // Add validation for valid email format
  if (!validateEmail(formData.email)) {
    displayErrorMessage("Please enter a valid email address");
    return;
  }

  // Add validation for password criteria
  // if (!validatePassword(formData.password)) {
  //   displayErrorMessage("Password must have at least 7 characters with at least one uppercase letter and one digit");
  //   return;
  // }


    // You can call either signInAdmin or signInVendor based on the role
    if (formData.role === "admin") {
      signInAdmin(formData);
    } else if (formData.role === "vendor") {
      signInVendor(formData);
    }
  }

  function validateEmail(email) {
  // Use a simple regular expression for basic email format validation
  return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
}

// function validatePassword(password) {
//   // Use a regular expression to enforce password criteria
//   // At least 7 characters, at least one uppercase letter, and at least one digit
//   return /^(?=.*[A-Z])(?=.*\d).{7,}$/.test(password);
// }

function signInAdmin(formData) {
  fetch("http://localhost:3000/admin/login", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(formData),
  })
    .then((response) => response.json())
    .then((data) => {

      console.log("Admin Login Response:", data);

      if (data.success) {
        // Set the token and email in local storage
        localStorage.setItem("adminToken", data.token);
        localStorage.setItem("adminEmail", data.adminUser.email);

        // Assuming adminUser is an object, you can store it in local storage as well
        // localStorage.setItem("adminUser", JSON.stringify(data.adminUser));

        // Redirect to the admin dashboard after successful login
        setTimeout(() => {
          window.location.href = "adminDash";
        }, 1000);
      } else {
        console.error("Admin Authentication failed:", data.message);
        displayErrorMessage(data.message);
      }
    })
    .catch((error) => {
      console.error("Error during admin authentication:", error);
      displayErrorMessage("An error occurred during admin authentication. Please try again.");
    });
}


  function signInVendor(formData) {


  fetch("http://localhost:3000/vendor/login-vendor", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(formData),
  })
    .then((response) => response.json())
    .then((data) => {
      console.log("Vendor Login Response:", data.vendor.email); 

      if (data.success) {
        // Set the token in local storage
        localStorage.setItem("vendorToken", data.token);
        localStorage.setItem("vendorId", data.vendor._id);
        localStorage.setItem("vendorEmail", data.vendor.email);
     
        
        setTimeout(() => {
          window.location.href = data.redirectTo;
        }, 1000);
      } else {
        console.error("Vendor Authentication failed:", data.message);
        displayErrorMessage(data.message);
      }
    })
    .catch((error) => {
      console.error("Error during vendor authentication:", error);
      displayErrorMessage("An error occurred during vendor authentication. Please try again.");
    });
}


  function displayErrorMessage(message) {
    var errorMessageElement = document.getElementById("errorMessage");

    if (!errorMessageElement) {
      errorMessageElement = document.createElement("div");
      errorMessageElement.id = "errorMessage";
      errorMessageElement.className = "alert alert-danger mt-3";
      document.getElementById("loginForm").appendChild(errorMessageElement);
    }

    errorMessageElement.textContent = message;
  }
</script>
