<!-- vendorDash.ejs -->
<%- include('../../layouts/header.ejs') %> <%-
include('../../layouts/admin.ejs') %>
<% const BASE_URL = process.env.BASE_URL %>
<div class="container-scroller">
  <div class="container-fluid page-body-wrapper">
    <div class="main-panel">
      <div class="content-wrapper">
        <!-- Add your vendor data table here -->
        <div class="row">
          <div class="col-md-12">
            <div class="page-header">
              <h3 class="page-title">Vendor</h3>
            </div>

            <div class="card mb-5">
              <div class="card-body">
                <h4 class="card-title">All Vendors</h4>
                <div class="table-responsive">
                  <table class="table table-striped" id="vendorTable">
                    <thead>
                      <tr>
                        <th>Sr.No</th>
                        <th>Email</th>
                        <th>Address</th>
                        <th>Company Name</th>
                        <th>GST Number</th>
                        <th>Developer Count</th>
                        <th>View Developer</th>
                      </tr>
                    </thead>

                    <tbody id="vendorTableBody"></tbody>
                  </table>
                </div>
              </div>
            </div>


            <!-- Button trigger modal -->
<!-- <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
  Launch demo modal
</button> -->

<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered  modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLongTitle">View Developers</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div id="newDataTableContainer" style="display: none">
          <h4 class="card-title">Developers</h4>
          <div class="table-responsive">
            <table class="table table-striped" id="newDataTable">
              <thead>
                <tr>
                  <th>Sr.No</th>
                  <th>Name</th>
                  <th>Technology</th>
                  <th>Experience</th>
                  <th>Rate</th>
                </tr>
              </thead>
              <tbody id="newDataTableBody"></tbody>
            </table>
          </div>
        </div>
      </div>
     
    </div>
  </div>
</div>
            
           
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<%- include('../../layouts/footer.ejs') %>

<script>
 
 
  document.addEventListener("DOMContentLoaded", function () {
    fetch("<%= BASE_URL %>/vendor/get-all-Vendors")
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then((data) => {
        if (data.success) {
          var vendorTable = $("#vendorTable").DataTable();

          data.vendors.forEach(function (vendor, index) {
            const developerCount = vendor.developers.length;

            // Create a button element for the "View" action
            const viewButton = `<button class="view-button btn btn-info" data-index="${index}" data-toggle="modal" data-target="#exampleModalCenter">View</button>`;

            vendorTable.row
              .add([
                index + 1,
                vendor.email,
                vendor.address || "profile not updated",
                vendor.company_name || "profile not updated",
                vendor.gst_number || "profile not updated",
                developerCount > 0 ? developerCount : "No Developer added",
                viewButton,
              ])
              .draw();
          });

          // Add event listener for the "View" button
          $("#vendorTable tbody").on("click", ".view-button", function () {
            const rowIndex = $(this).data("index");
            const selectedVendor = data.vendors[rowIndex];

            // Call the developer API
            fetch(
              `<%= BASE_URL %>/developer/get-by-vendor/${selectedVendor._id}`
            )
              .then((response) => {
                if (!response.ok) {
                  throw new Error("Network response was not ok");
                }
                return response.json();
              })
              .then((developerData) => {
                if (developerData.developers.length > 0) {
                  console.log("Selected Vendor:", selectedVendor);
                  console.log("Developer Data:", developerData.developers);

                  // Clear existing rows in the new data table
                  // $("#newDataTable").DataTable().clear().draw();

                  // Populate the new data table with developer data
                  developerData.developers.forEach(function (developer, index) {
                    $("#newDataTable").DataTable().row
                      .add([
                        index + 1,
                        developer.name,
                        developer.technology,
                        developer.experience,
                        developer.rate,
                      ])
                      .draw();
                  });

                  // Show the new table container
                  document.getElementById(
                    "newDataTableContainer"
                  ).style.display = "block";
                } else {
                  console.log(
                    "API response indicates failure------------:",
                    developerData.message
                  );
                }
              })
              .catch((error) => {
                console.error("Error fetching developer data:", error);
              });
          });
        } else {
          console.error("API response indicates failure:", data.message);
        }
      })
      .catch((error) => {
        console.error("Error fetching vendors:", error);
      });
  });

  const tokens = localStorage.getItem("adminToken");

  if (!tokens) {
    window.location.href = "/login";
  }
</script>
